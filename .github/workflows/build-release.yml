name: 💻 固件编译

on:
  workflow_dispatch:
    inputs:
      device:
        description: 'Select the build device'
        required: true
        default: 'Cetron-CT3003'
        type: choice
        options:
          - 'Netcore-N60'
          - 'Netcore-N60-pro'
          - 'Netcore-N60-pro-512rom'
          - 'Cetron-CT3003'
          - 'Qihoo-360t7'
          - 'Qihoo-360t7-512rom'
      high_power:
        description: 'Netcore-N60-pro ipailna high power '
        type: boolean
        default: true
      lan_addr:
        description: 'Setting default LAN address'
        required: true
        default: '10.0.0.1'
        type: string
      root_password:
        description: 'Setting default root password (Default is Passwaod)'
        required: false
        default: 'password'
        type: string
      wifi_name:
        description: 'Setting default wifi name (Default is ZeroWrt)'
        required: false
        default: 'ZeroWrt'
        type: string
      wifi_password:
        description: 'Setting default wifi password (Default is 123456)'
        required: false
        default: '12345678'
        type: string
      build_options:
        description: 'Build options (separate multiple options with spaces)'
        required: false
        default: 'BUILD_FAST=y'
        type: string

jobs:
  build:
    name: Build ${{ github.event.inputs.device }}
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      continue-on-error: true
      uses: actions/checkout@main
      with:
        path: OpenWRT-Mediatek

    - name: Setup variables
      run: |
        sudo timedatectl set-timezone 'Asia/Shanghai'
        git config --global user.name 'actions'
        git config --global user.email 'action@github.com'
        echo build_dir="/builder" >> "$GITHUB_ENV"
       
    - name: Show system
      run: |
        echo -e "\n\e[1;32mCPU:\e[0m"
        echo "$(grep 'model name' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}') ($(grep 'cpu MHz' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}')MHz) x $(grep processor /proc/cpuinfo  | wc -l)"
        echo -e "\n\e[1;32mMemory:\e[0m"
        free -h
        echo -e "\n\e[1;32mStorage:\e[0m"
        df -Th / /mnt
        echo -e "\n\e[1;32mSystem:\e[0m"
        lsb_release -a
        echo -e "\n\e[1;32mKernel:\e[0m"
        uname -a
        echo

    - name: Install Caddy Server
      run: |
        sudo curl -sL -o /usr/bin/caddy https://github.com/zhiern/OpenWRT/releases/download/Caddy/caddy
        sudo chmod 755 /usr/bin/caddy
        echo ":8080 {" > caddyfile
        echo "    root * $(pwd)/OpenWRT-Mediatek" >> caddyfile
        echo "    file_server browse" >> caddyfile
        echo "}" >> caddyfile
        sudo /usr/bin/caddy start --config caddyfile --adapter caddyfile

    - name: Free disk space
      uses: sbwml/actions@free-disk
      with:
        build-mount-path: /builder

    - name: Build System Setup
      uses: sbwml/actions@openwrt-build-setup

    - name: Install LLVM
      uses: sbwml/actions@install-llvm
        
    - name: Compile OpenWrt
      working-directory: /builder
      id: compile
      continue-on-error: true
      env:
        git_name: ${{ secrets.username }}
        git_password: ${{ secrets.password }}
      run: |
        export ${{ github.event.inputs.build_options }} LAN=${{ github.event.inputs.lan_addr }} Wifi_Name="${{ github.event.inputs.wifi_name }}" Wifi_Password="${{ github.event.inputs.wifi_password }}"  USE_GCC13=y
        [ ${{ github.event.inputs.high_power }} = 'true' ] && export High_Power=y
        [ -n ${{ github.event.inputs.root_password }} ] && export ROOT_PASSWORD="${{ github.event.inputs.root_password }}"
        bash <(curl -sS http://127.0.0.1:8080/build.sh) ${{ github.event.inputs.device }}

    - name: Extensive logs after a failed compilation
      working-directory: /builder
      if: steps.compile.outcome == 'failure'
      run: |
        cd openwrt
        make V=s
          
    - name: Prepare Firmware Files
      working-directory: /builder
      run: |
        mkdir -p rom info
        if [ "${{ github.event.inputs.device }}" = "Netcore-N60" ]; then
          cp -a openwrt/bin/targets/mediatek/filogic/openwrt-mediatek-filogic-netcore_n60-squashfs-sysupgrade.itb rom/
        elif [ "${{ github.event.inputs.device }}" = "Netcore-N60-pro" ]; then
          cp -a openwrt/bin/targets/mediatek/filogic/openwrt-mediatek-filogic-netcore_n60-pro-squashfs-sysupgrade.bin rom/
        elif [ "${{ github.event.inputs.device }}" = "Netcore-N60-pro-512rom" ]; then
          mv openwrt/bin/targets/mediatek/filogic/openwrt-mediatek-filogic-netcore_n60-pro-squashfs-sysupgrade.bin openwrt/bin/targets/mediatek/filogic/openwrt-mediatek-filogic-netcore_n60-pro-512rom-squashfs-sysupgrade.bin
          cp -a openwrt/bin/targets/mediatek/filogic/openwrt-mediatek-filogic-netcore_n60-pro-512rom-squashfs-sysupgrade.bin rom/
        elif [ "${{ github.event.inputs.device }}" = "Qihoo-360t7" ]; then
          cp -a openwrt/bin/targets/mediatek/filogic/openwrt-mediatek-filogic-qihoo_360t7-squashfs-sysupgrade.bin rom/
        elif [ "${{ github.event.inputs.device }}" = "Qihoo-360t7-512rom" ]; then
          mv openwrt/bin/targets/mediatek/filogic/mediatek-filogic-qihoo_360t7-squashfs-sysupgrade.bin openwrt/bin/targets/mediatek/filogic/openwrt-mediatek-filogic-qihoo_360t7-512rom-squashfs-sysupgrade.bin
          cp -a openwrt/bin/targets/mediatek/filogic/openwrt-mediatek-filogic-qihoo_360t7-512rom-squashfs-sysupgrade.bin rom/
        elif [ "${{ github.event.inputs.device }}" = "Cetron-CT3003" ]; then
          cp -a openwrt/bin/targets/mediatek/filogic/openwrt-mediatek-filogic-cetron_ct3003-squashfs-sysupgrade.bin rom/          
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.inputs.device }}-openwrt-${{ env.latest_release }}
        path: ${{ env.build_dir }}/rom/*

    - name: Create release
      continue-on-error: true
      uses: ncipollo/release-action@v1
      with:
        name: openwrt-24.10
        allowUpdates: true
        tag: openwrt-24.10
        commit: openwrt-24.10
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.build_dir }}/rom/*
        body: |
          ## 🔍 固件信息概览 
          - 🛠 **源码基础**：[Padavanonly](https://github.com/padavanonly/immortalwrt-mt798x-24.10)

          - 🔧 **默认设置**：
            - 管理地址：`10.0.0.1`，密码：`password` 或留空
            - 默认WIFI密码：12345678 
            - 所有 LAN 口均可访问网页终端和 SSH
            - WAN 默认启用防火墙保护
            - Docker 已切换为国内源，支持镜像加速 
      
          - 🚀 **增强支持**：[具体请查看 hanwckf 项目说明](https://cmi.hanwckf.top/p/immortalwrt-mt798x)
            - 使用 mtk-openwrt-feeds 提供的有线驱动、hnat 驱动、内核补丁及配置工具，支持所有硬件加速特性
            - 使用 mtwifi 原厂无线驱动，默认开启 802.11k，支持 warp 在内的所有加速特性
            - mt7981/mt7986 均支持两个 ppe，每个 ppe 有 32k Entry（当有线驱动使用 ADMAv1 时，每个 PPE 最大支持 16k Entry）
            - mtwifi-cfg 无线配置工具支持 OpenWrt 的原生 luci 界面以及 netifd-wireless 标准接口，还支持 mtk 原厂提供的 luci-app-mtk 和 wifi-profile
      
          - 🎛 **功能优化**：
            - 内置 ZeroWrt 设置菜单，轻松管理
            - 支持高级插件、自定义启动项
