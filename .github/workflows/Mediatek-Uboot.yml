name: ⚡ Mediatek Uboot

on:
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.device }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 15
      matrix:
        device:
          - mt7981-360t7
          - mt7981-abt_asr3000
          - mt7981-ax3000t
          - mt7981-ax3000t_an8855
          - mt7981-cetron_ct3003
          - mt7981-cmcc_a10
          - mt7981-cmcc_rax3000m
          - mt7981-cmcc_rax3000m-emmc
          - mt7981-cudy_tr3000-v1
          - mt7981-h3c_magic-nx30-pro
          - mt7981-imou_lc-hx3001
          - mt7981-jcg_q30
          - mt7981-konka_komi-a31
          - mt7981-livinet_zr-3020
          - mt7981-nokia_ea0326gmp
          - mt7981-wr30u
          - mt7986-jdcloud_re-cp-03
          - mt7986-netcore_n60
          - mt7986-netcore_n60-pro
          - mt7986-netcore_n60-pro-512rom
          - mt7986-redmi_ax6000
          - mt7986-tplink_tl-xdr608x
          - mt7986-tplink_tl-xtr8488

    steps:
      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get update
          sudo -E apt-get install gcc-aarch64-linux-gnu build-essential flex bison libssl-dev device-tree-compiler jq
          
      - name: Checkout source tree
        uses: actions/checkout@v4
        with:
          repository: NeonPulse-Zero/bl-mt798x   # ✅ 指定源码仓库
          fetch-depth: 0
          
      - name: Build BL2 and FIP
        env:
          CONFIG: ${{ matrix.device }}
        run: |
          export SOC="${CONFIG%%-*}"
          BOARD="${CONFIG#*-}"
          export BOARD="$BOARD"
          mkdir -p "output"
          ./build.sh
          echo "ARTIFACT_NAME=$SOC-$BOARD" >> "$GITHUB_ENV"
          
      - name: Upload build outputs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: output/*

      - name: Upload firmware to release
        uses: ncipollo/release-action@v1
        with:
          name: MT798X_Uboot
          allowUpdates: true
          tag: MT798X_Uboot
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: output/*
          body: |
            # 🛠️ mt798x uboot 功能介绍

            **日期**：Sep 09, 2025  
            **项目**：bl-mt798x 项目基于 mtk 原厂提供的 ATF 及 uboot 源码，特点如下  

            ## ✨ 特点

            - 🛠️ uboot 自带 mtk 原厂开发的简易 webui 恢复界面，可以通过 webui 直接刷入固件或者更新 uboot，也可以使用串口 + TFTP 刷入固件  

            - 🛠️ 支持 GL.iNet 开发的通电后长按 RESET 按钮自动进入 webui 恢复界面的功能  

            - 🛠️ 支持多种 Flash 分区布局切换功能（仅支持 spi-nand），可以在 webui 中切换不同的分区布局，完美兼容小米原厂固件  

            - 🛠️ 加入完整的中文汉化界面，不仅菜单和提示信息均已本地化，还优化了交互体验，方便国内用户快速上手使用
